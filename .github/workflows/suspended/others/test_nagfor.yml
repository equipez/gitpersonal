name: Test nagfor

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 2,6,10,14,18,22 * * *'
  # Trigger the workflow when it is manually triggered
  workflow_dispatch:

jobs:
  # check_date:
  #   runs-on: ubuntu-latest
  #   name: Check latest commit
  #   outputs:
  #     has_recent_commit: ${{ steps.has_recent_commit.outputs.has_recent_commit }}

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: print latest_commit
  #       run: echo ${{ github.sha }}
  #     - id: has_recent_commit
  #       continue-on-error: true
  #       name: check whether the last commit is sufficiently recent
  #       if: ${{ github.event_name == 'schedule' }}
  #       run: if [[ -n $(git rev-list --after="6 hours" ${{ github.sha }}) ]] ; then echo "::set-output name=has_recent_commit::true"; fi


  test:
    name: Run nagfor tests
    #needs: check_date
    #if: ${{ github.event_name != 'schedule' || needs.check_date.outputs.has_recent_commit == 'true' }}
    runs-on: [self-hosted, nagfor]
    strategy:
      fail-fast: false
      matrix:
        ikind: [i2, i4, i8]
        solver: [lincoa]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          TEST_DIR=/tmp/gittest_"$(date +%s)"_"$((RANDOM*RANDOM))"  # Needed in the Makefiles
          echo "TEST_DIR=$TEST_DIR" >> $GITHUB_ENV  # Make the environment variable available in subsequent steps
          echo "$TEST_DIR"

      - name: Get the source
        run: unzip -P neupdfo2021 neupdfo.zip

      - name: Conduct the test
        run: |
          export PATH=$PATH:"~/local/bin"
          source ~/local/bin/nag_licensing || echo "\n\nNAG licensing failed.\n\n"
          ROOT=$(realpath ./neupdfo)
          cd $ROOT/fsrc/tests && make ntest_${{ matrix.ikind }}.${{ matrix.solver }}
          cd $ROOT/fsrc/examples/${{ matrix.solver }} && make ntest

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.TEST_DIR }}/neupdfo/fsrc/tests/test.${{ matrix.solver }}/log/*.log

      - name: Remove the test data
        run:
          rm -rf ${{ env.TEST_DIR }}
