name: Plot performance profiles for the finished solvers

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 8 * * *'
  # Trigger the workflow when it is manually triggered
  workflow_dispatch:

env:
  GFORTRAN_VERSION: 10
  MATLAB_RELEASE: latest

jobs:
  test:
    name: Plot the performance profiles of the modernized solvers.
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        dim: [small, big, large, all]
        solver: [newuoa, cobyla]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: cache install CUTEst
        id: cache-install-cutest
        uses: actions/cache@v2
        with:
          path: ~/local/cutesif
          key:  ${{ runner.os }}-${{ hashFiles('**/.github/scripts/install_cutest') }}
      - name: Install CUTEst
        if: steps.cache-install-cutest.outputs.cache-hit != 'true'
        run: |
          bash .github/scripts/install_cutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo bash .github/scripts/link_gfortran_for_matlab ${{ env.GFORTRAN_VERSION }}

      - name: Check MATLAB
        id: check_matlab
        run: |
            if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Set up MATLAB
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v1
        with:
          release: ${{ env.MATLAB_RELEASE }}

      - name: Get the source
        run: unzip -P neupdfo2021 neupdfo.zip

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: |
            root_dir = pwd();
            cd('neupdfo/matlab/tests');
            switch '${{ matrix.solver }}'
            case 'cobyla'
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'ubln');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'u', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'b', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'l', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'n', 'load');
            case 'lincoa'
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'ubl');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'u', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'b', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'l', 'load');
            case 'bobyqa'
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'ub');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'u', 'load');
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'b', 'load');
            case {'newuoa', 'uobyqa'}
                profile('${{ matrix.solver }}', '${{ matrix.dim }}', 'u');
            end
            cd(fullfile(root_dir, 'neupdfo')); setup path  % Test that `setup path` works properly.

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: neupdfo/matlab/tests/testdata

      - name: Remove the test data
        run:
          rm -rf ./neupdfo/matlab/tests/testdata
